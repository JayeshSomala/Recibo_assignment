{"ast":null,"code":"'use strict';\n\nconst Iconv = require('iconv-lite');\n\nexports.decode = function (buffer, encoding, start, end, options) {\n  if (Buffer.isEncoding(encoding)) {\n    return buffer.toString(encoding, start, end);\n  }\n\n  const decoder = Iconv.getDecoder(encoding, options || {});\n  const res = decoder.write(buffer.slice(start, end));\n  const trail = decoder.end();\n  return trail ? res + trail : res;\n};\n\nexports.encode = function (string, encoding, options) {\n  if (Buffer.isEncoding(encoding)) {\n    return Buffer.from(string, encoding);\n  }\n\n  const encoder = Iconv.getEncoder(encoding, options || {});\n  const res = encoder.write(string);\n  const trail = encoder.end();\n  return trail && trail.length > 0 ? Buffer.concat([res, trail]) : res;\n};","map":{"version":3,"sources":["C:/Users/jayes/Downloads/react-hook-form-crud-example/src/_helpers/node_modules/mysql2/lib/parsers/string.js"],"names":["Iconv","require","exports","decode","buffer","encoding","start","end","options","Buffer","isEncoding","toString","decoder","getDecoder","res","write","slice","trail","encode","string","from","encoder","getEncoder","length","concat"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;;AAEAC,OAAO,CAACC,MAAR,GAAiB,UAASC,MAAT,EAAiBC,QAAjB,EAA2BC,KAA3B,EAAkCC,GAAlC,EAAuCC,OAAvC,EAAgD;AAC/D,MAAIC,MAAM,CAACC,UAAP,CAAkBL,QAAlB,CAAJ,EAAiC;AAC/B,WAAOD,MAAM,CAACO,QAAP,CAAgBN,QAAhB,EAA0BC,KAA1B,EAAiCC,GAAjC,CAAP;AACD;;AAED,QAAMK,OAAO,GAAGZ,KAAK,CAACa,UAAN,CAAiBR,QAAjB,EAA2BG,OAAO,IAAI,EAAtC,CAAhB;AAEA,QAAMM,GAAG,GAAGF,OAAO,CAACG,KAAR,CAAcX,MAAM,CAACY,KAAP,CAAaV,KAAb,EAAoBC,GAApB,CAAd,CAAZ;AACA,QAAMU,KAAK,GAAGL,OAAO,CAACL,GAAR,EAAd;AAEA,SAAOU,KAAK,GAAGH,GAAG,GAAGG,KAAT,GAAiBH,GAA7B;AACD,CAXD;;AAaAZ,OAAO,CAACgB,MAAR,GAAiB,UAASC,MAAT,EAAiBd,QAAjB,EAA2BG,OAA3B,EAAoC;AACnD,MAAIC,MAAM,CAACC,UAAP,CAAkBL,QAAlB,CAAJ,EAAiC;AAC/B,WAAOI,MAAM,CAACW,IAAP,CAAYD,MAAZ,EAAoBd,QAApB,CAAP;AACD;;AAED,QAAMgB,OAAO,GAAGrB,KAAK,CAACsB,UAAN,CAAiBjB,QAAjB,EAA2BG,OAAO,IAAI,EAAtC,CAAhB;AAEA,QAAMM,GAAG,GAAGO,OAAO,CAACN,KAAR,CAAcI,MAAd,CAAZ;AACA,QAAMF,KAAK,GAAGI,OAAO,CAACd,GAAR,EAAd;AAEA,SAAOU,KAAK,IAAIA,KAAK,CAACM,MAAN,GAAe,CAAxB,GAA4Bd,MAAM,CAACe,MAAP,CAAc,CAACV,GAAD,EAAMG,KAAN,CAAd,CAA5B,GAA0DH,GAAjE;AACD,CAXD","sourcesContent":["'use strict';\n\nconst Iconv = require('iconv-lite');\n\nexports.decode = function(buffer, encoding, start, end, options) {\n  if (Buffer.isEncoding(encoding)) {\n    return buffer.toString(encoding, start, end);\n  }\n\n  const decoder = Iconv.getDecoder(encoding, options || {});\n\n  const res = decoder.write(buffer.slice(start, end));\n  const trail = decoder.end();\n\n  return trail ? res + trail : res;\n};\n\nexports.encode = function(string, encoding, options) {\n  if (Buffer.isEncoding(encoding)) {\n    return Buffer.from(string, encoding);\n  }\n\n  const encoder = Iconv.getEncoder(encoding, options || {});\n\n  const res = encoder.write(string);\n  const trail = encoder.end();\n\n  return trail && trail.length > 0 ? Buffer.concat([res, trail]) : res;\n};\n"]},"metadata":{},"sourceType":"module"}