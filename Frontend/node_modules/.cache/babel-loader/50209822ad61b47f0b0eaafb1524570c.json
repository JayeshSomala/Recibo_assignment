{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayes\\\\OneDrive\\\\Desktop\\\\Recibo\\\\Assignment\\\\Frontend\\\\src\\\\_components\\\\Alert.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { alertService, AlertType } from '../_services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst propTypes = {\n  id: PropTypes.string,\n  fade: PropTypes.bool\n};\nconst defaultProps = {\n  id: 'default-alert',\n  fade: true\n};\n\nfunction Alert(_ref) {\n  _s();\n\n  let {\n    id,\n    fade\n  } = _ref;\n  const history = useHistory();\n  const [alerts, setAlerts] = useState([]);\n  useEffect(() => {\n    // subscribe to new alert notifications\n    const subscription = alertService.onAlert(id).subscribe(alert => {\n      // clear alerts when an empty alert is received\n      if (!alert.message) {\n        setAlerts(alerts => {\n          // filter out alerts without 'keepAfterRouteChange' flag\n          const filteredAlerts = alerts.filter(x => x.keepAfterRouteChange); // remove 'keepAfterRouteChange' flag on the rest\n\n          filteredAlerts.forEach(x => delete x.keepAfterRouteChange);\n          return filteredAlerts;\n        });\n      } else {\n        // add alert to array\n        setAlerts(alerts => [...alerts, alert]); // auto close alert if required\n\n        if (alert.autoClose) {\n          setTimeout(() => removeAlert(alert), 3000);\n        }\n      }\n    }); // clear alerts on location change\n\n    const historyUnlisten = history.listen(_ref2 => {\n      let {\n        pathname\n      } = _ref2;\n      // don't clear if pathname has trailing slash because this will be auto redirected again\n      if (pathname.endsWith('/')) return;\n      alertService.clear(id);\n    }); // clean up function that runs when the component unmounts\n\n    return () => {\n      // unsubscribe & unlisten to avoid memory leaks\n      subscription.unsubscribe();\n      historyUnlisten();\n    };\n  }, []);\n\n  function removeAlert(alert) {\n    if (fade) {\n      // fade out alert\n      const alertWithFade = { ...alert,\n        fade: true\n      };\n      setAlerts(alerts => alerts.map(x => x === alert ? alertWithFade : x)); // remove alert after faded out\n\n      setTimeout(() => {\n        setAlerts(alerts => alerts.filter(x => x !== alertWithFade));\n      }, 250);\n    } else {\n      // remove alert\n      setAlerts(alerts => alerts.filter(x => x !== alert));\n    }\n  }\n\n  function cssClasses(alert) {\n    if (!alert) return;\n    const classes = ['alert', 'alert-dismissable'];\n    const alertTypeClass = {\n      [AlertType.Success]: 'alert alert-success',\n      [AlertType.Error]: 'alert alert-danger',\n      [AlertType.Info]: 'alert alert-info',\n      [AlertType.Warning]: 'alert alert-warning'\n    };\n    classes.push(alertTypeClass[alert.type]);\n\n    if (alert.fade) {\n      classes.push('fade');\n    }\n\n    return classes.join(' ');\n  }\n\n  if (!alerts.length) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-3\",\n      children: alerts.map((alert, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cssClasses(alert),\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"close\",\n          onClick: () => removeAlert(alert),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: alert.message\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Alert, \"fb7BLi9/HfnFhDOmJrZ9LXri8pQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Alert;\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport { Alert };\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["C:/Users/jayes/OneDrive/Desktop/Recibo/Assignment/Frontend/src/_components/Alert.jsx"],"names":["React","useState","useEffect","useHistory","PropTypes","alertService","AlertType","propTypes","id","string","fade","bool","defaultProps","Alert","history","alerts","setAlerts","subscription","onAlert","subscribe","alert","message","filteredAlerts","filter","x","keepAfterRouteChange","forEach","autoClose","setTimeout","removeAlert","historyUnlisten","listen","pathname","endsWith","clear","unsubscribe","alertWithFade","map","cssClasses","classes","alertTypeClass","Success","Error","Info","Warning","push","type","join","length","index","__html"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { alertService, AlertType } from '../_services';\r\n\r\nconst propTypes = {\r\n    id: PropTypes.string,\r\n    fade: PropTypes.bool\r\n};\r\n\r\nconst defaultProps = {\r\n    id: 'default-alert',\r\n    fade: true\r\n};\r\n\r\nfunction Alert({ id, fade }) {\r\n    const history = useHistory();\r\n    const [alerts, setAlerts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // subscribe to new alert notifications\r\n        const subscription = alertService.onAlert(id)\r\n            .subscribe(alert => {\r\n                // clear alerts when an empty alert is received\r\n                if (!alert.message) {\r\n                    setAlerts(alerts => {\r\n                        // filter out alerts without 'keepAfterRouteChange' flag\r\n                        const filteredAlerts = alerts.filter(x => x.keepAfterRouteChange);\r\n\r\n                        // remove 'keepAfterRouteChange' flag on the rest\r\n                        filteredAlerts.forEach(x => delete x.keepAfterRouteChange);\r\n                        return filteredAlerts;\r\n                    });\r\n                } else {\r\n                    // add alert to array\r\n                    setAlerts(alerts => ([...alerts, alert]));\r\n\r\n                    // auto close alert if required\r\n                    if (alert.autoClose) {\r\n                        setTimeout(() => removeAlert(alert), 3000);\r\n                    }\r\n                }\r\n            });\r\n\r\n        // clear alerts on location change\r\n        const historyUnlisten = history.listen(({ pathname }) => {\r\n            // don't clear if pathname has trailing slash because this will be auto redirected again\r\n            if (pathname.endsWith('/')) return;\r\n\r\n            alertService.clear(id);\r\n        });\r\n\r\n        // clean up function that runs when the component unmounts\r\n        return () => {\r\n            // unsubscribe & unlisten to avoid memory leaks\r\n            subscription.unsubscribe();\r\n            historyUnlisten();\r\n        };\r\n    }, []);\r\n\r\n    function removeAlert(alert) {\r\n        if (fade) {\r\n            // fade out alert\r\n            const alertWithFade = { ...alert, fade: true };\r\n            setAlerts(alerts => alerts.map(x => x === alert ? alertWithFade : x));\r\n\r\n            // remove alert after faded out\r\n            setTimeout(() => {\r\n                setAlerts(alerts => alerts.filter(x => x !== alertWithFade));\r\n            }, 250);\r\n        } else {\r\n            // remove alert\r\n            setAlerts(alerts => alerts.filter(x => x !== alert));\r\n        }\r\n    }\r\n\r\n    function cssClasses(alert) {\r\n        if (!alert) return;\r\n\r\n        const classes = ['alert', 'alert-dismissable'];\r\n                \r\n        const alertTypeClass = {\r\n            [AlertType.Success]: 'alert alert-success',\r\n            [AlertType.Error]: 'alert alert-danger',\r\n            [AlertType.Info]: 'alert alert-info',\r\n            [AlertType.Warning]: 'alert alert-warning'\r\n        }\r\n\r\n        classes.push(alertTypeClass[alert.type]);\r\n\r\n        if (alert.fade) {\r\n            classes.push('fade');\r\n        }\r\n\r\n        return classes.join(' ');\r\n    }\r\n\r\n    if (!alerts.length) return null;\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"m-3\">\r\n                {alerts.map((alert, index) =>\r\n                    <div key={index} className={cssClasses(alert)}>\r\n                        <a className=\"close\" onClick={() => removeAlert(alert)}>&times;</a>\r\n                        <span dangerouslySetInnerHTML={{__html: alert.message}}></span>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nAlert.propTypes = propTypes;\r\nAlert.defaultProps = defaultProps;\r\nexport { Alert };"]},"metadata":{},"sourceType":"module"}